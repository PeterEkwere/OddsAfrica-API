#!/usr/bin/python
"""
    This module houses the class for 1xbet
    Author: Peter Ekwere
"""
from utils.logger.log import log_exception, log_success, log_error
import requests
import json
import re
from difflib import SequenceMatcher
import requests
from datetime import datetime
from timeout_decorator import timeout
import os
import json
import difflib
from engine.ArbBrain.arb import Find_arbitrage
from utils.process import process_games
from utils.arrange import arrange_games
from collections import OrderedDict
from utils.arrange import save_json, load_json







football_combinations = [
    [1, ["1(Draw no bet)", "2(Draw no bet)"],
        ["GG", "NG"],
        ["Over(1.5)", "Under(1.5)"],
        ["Over(2.5)", "Under(2.5)"],
        ["Over(3.5)", "Under(3.5)"],
        ["Over(4.5)", "Under(4.5)"],
        ["Over(2)", "Under(2.5)"],
        ["Over(3)", "Under(3.5)"],
        ["Over(4)", "Under(4.5)"],
        ["Under(2)", "Over(1.5)"],
        ["Under(3)", "Over(2.5)"],
        ["Under(4)", "Over(3.5)"],
        ["NG", "Over(1.5)"],
        ["1", "2X"],
        ["1X", "2"],
        ["X", "12"],
        ["1", "2(+1)"],
        ["1(-1)", "2(+2)"],
        ["1(-2)", "2(+3)"],
        ["1(+1)", "2"],
        ["1(+2)", "2(-1)"],
        ["1(+3)", "2(-2)"],
        ["H1(-0.5)", "H2(+0.5)"],
        ["H1(+0.5)", "H2(-0.5)"],
        ["H1(-1.5)", "H2(+1.5)"],
        ["H1(+1.5)", "H2(-1.5)"],
        ["H1(-2.5)", "H2(+2.5)"],
        ["H1(+2.5)", "H2(-2.5)"],
        ["H1(-3.5)", "H2(+3.5)"],
        ["H1(+3.5)", "H2(-3.5)"],
        ["H1(-1)", "H2(+1)"],
        ["H1(-2)", "H2(+2)"],
        ["H1(-3)", "H2(+3)"],
        ["H1(+1)", "H2(-1)"],
        ["H1(+2)", "H2(-2)"],
        ["H1(+3)", "H2(-3)"],
        ["Total Booking 0-3", "Bookings Over(3.5)"],
        ["Corners Over(6.5)", 'Corners Under(6.5)'],
        ['Corners Over(7.5)', 'Corners Under(7.5)'],
        ['Corners Over(8.5)', 'Corners Under(8.5)'],
        ['Corners Over(9.5)', 'Corners Under(9.5)'],
        ['Corners Over(10.5)', 'Corners Under(10.5)'],
        ['Corners Over(11.5)', 'Corners Under(11.5)'],
        ['Corners Over(12.5)', 'Corners Under(12.5)'],
    ],
    [2, ["1", "X", "2"],
        ["H1(-0.5)", "X", "2"],
        ["1", "X", "H2(-0.5)"],	
        ["H1(-0.5)", "X", "H2(-0.5)"],
    ],
    [3, 
	["1(Draw no bet)", "X", "2"],
	["H1(0)","X","2"],
	["H1(0)","X","H2(-0.5)"],
	["1(Draw no bet)","X","H2(-0.5)"],
    ],
    [4,
	["H1(0)","2X","2"],
	["1(Draw no bet)","2X","2"],
	["H1(0)","H2(+0.5)","2"],
	["H1(0)","2X","H2(-0.5)"],
	["H1(0)","H2(+0.5)","H2(-0.5)"],
	["1(Draw no bet)","H2(+0.5)","2"],
	["1(Draw no bet)","2X","H2(-0.5)"],
	["1(Draw no bet)","H2(+0.5)","H2(-0.5)"],
	["H1(+1)","2","H2(-1.5)"],
	["H1(+1)","H2(-0.5)","H2(-1.5)"],
	["H1(-1)","H2(+1.5)","2X"],
	["H1(-1)","H2(+1.5)","H2(+0.5)"],
	["H1(+2)","H2(-1.5)","H2(-2.5)"],
	["H1(-2)","H2(+2.5)","H2(+1.5)"],
	["H1(0)","2(+1)","2"],
	["H1(0)","2(+1)","H2(-0.5)"],
	["1(Draw no bet)","2(+1)","2"],
	["1(Draw no bet)","2(+1)","H2(-0.5)"],
	["1","1(+1)","H2(0)"],
	["H1(-0.5)","1(+1)","H2(0)"],
	["1","1(+1)","2(Draw no bet)"],
	["H1(-0.5)","1(+1)","2(Draw no bet)"],
	["H1(+1)","2","2(-1)"],
	["H1(+1)","H2(-0.5)","2(-1)"],
	["1(-1)","1","H2(+1)"],
	["1(-1)","H1(-0.5)","H2(+1)"],
	["H1(-1)","2(+2)","2X"],
	["H1(-1)","2(+1)","H2(+0.5)"],
	["H1(-1)","H2(+1.5)","2(+1)"],
	["H1(-1)","2(+2)","2(+1)"],
	["1X","1(+2)","H2(-1)"],
	["1(+1)","H1(+1.5)","H2(-1)"],
	["H1(+0.5)","1(+2)","H2(-1)"],
	["1(+1)","1(+2)","H2(-1)"],
	["H1(+2)","2(-1)","H2(-2.5)"],
	["H1(+2)","H2(-1.5)","2(-2)"],
	["H1(+2)","2(-1)","2(-2)"],
	["1(-2)","H1(-1.5)","H2(+2)"],
	["H1(-2.5)","1(-1)","H2(+2)"],
	["1(-2)","1(-1)","H2(+2)"],
	["H1(-2)","2(+3)","H2(+1.5)"],
	["H1(-2)","H2(+2.5)","2(+2)"],
	["H1(-2)","2(+3)","2(+2)"],
	["1(+2)","H1(+2.5)","H2(-2)"],
	["H1(+1.5)","1(+3)","H2(-2)"],
	["1(+2)","1(+3)","H2(-2)"],
	["Over(2)","Under(2.5)","Under(1.5)"],
	["Under(2)","Over(1.5)","Over(2.5)"],
	["Over(3)","Under(3.5)","Under(2.5)"],
	["Under(3)","Over(2.5)","Over(3.5)"],
	["Over(4)","Under(4.5)","Under(3.5)"],
	["Under(4)","Over(3.5)","Over(4.5)"],
    ],
    [5,
	["H1(-0.25)","X","2"],
	["H1(-0.25)","X","H2(-0.5)"],
	],
    [6,
	["H1(-0.25)","2X","2"],
	["H1(-0.25)","2X","H2(-0.5)"],
	["H1(-0.25)","H2(+0.5)","H2(-0.5)"],
	["H1(-0.25)","H2(+0.5)","2"],
	["H1(+0.75)","2","H2(-1.5)"],
	["H1(+0.75)","H2(-0.5)","H2(-1.5)"],
	["H1(+1.75)","H2(-1.5)","H2(-2.5)"],
	["H1(-1.25)","H2(+1.5)","2X"],
	["H1(-1.25)","H2(+1.5)","H2(+0.5)"],
	["H1(-2.25)","H2(+2.5)","H2(+1.5)"],
	["H1(-0.25)","2(+1)","H2(-0.5)"],
	["H1(-0.25)","2(+1)","2"],
	["H1(+0.75)","2","2(-1)"],
	["H1(+0.75)","H2(-0.5)","2(-1)"],
	["H1(+1.75)","2(-1)","H2(-2.5)"],
	["H1(+1.75)","H2(-1.5)","2(-2)"],
	["H1(+1.75)","2(-1)","2(-2)"],
	["H1(-1.25)","2(+2)","2X"],
	["H1(-1.25)","H2(+1.5)","H2(+0.5)"],
	["H1(-1.25)","2(+2)","H2(+0.5)"],
	["H1(-1.25)","H2(+1.5)","2(+1)"],
	["H1(-1.25)","2(+2)","2(+1)"],
	["H1(-2.25)","H2(+2.5)","H2(+1.5)"],
	["H1(-2.25)","2(+3)","H2(+1.5)"],
	["H1(-2.25)","H2(+2.5)","2(+2)"],
	["H1(-2.25)","2(+3)","2(+2)"],
	["Under(1.75)","Over(1.5)","Over(2.5)"],
	["Over(2.25)","Under(2.5)","Under(1.5)"],
	["Under(2.75)","Over(2.5)","Over(3.5)"],
	["Under(3.75)","Over(3.5)","Over(4.5)"],
	["Over(3.25)","Under(3.5)","Under(2.5)"],
	],
    [7, 
	["H1(+0.25)","X","2"],
	["H1(+0.25)","X","H2(-0.5)"],
    ],
    [8,
	["H1(+0.25)","2X","2"],
	["H1(+0.25)","2X","H2(-0.5)"],
	["H1(+0.25)","H2(+0.5)","H2(-0.5)"],
	["H1(+0.25)","H2(+0.5)","2"],
	["H1(+1.25)","H2(-0.5)","H2(-1.5)"],
	["H1(+1.25)","2","H2(-1.5)"],
	["H1(+2.25)","H2(-1.5)","H2(-2.5)"],
	["H1(-0.75)","H2(+1.5)","H2(+0.5)"],
	["H1(-0.75)","H2(+1.5)","2X"],
	["H1(-1.75)","H2(+2.5)","H2(+1.5)"],
	["H1(+0.25)","2(+1)","H2(-0.5)"],
	["H1(+0.25)","2(+1)","2"],
	["H1(+1.25)","H2(-0.5)","2(-1)"],
	["H1(+1.25)","2","2(-1)"],
	["H1(+2.25)","H2(-1.5)","H2(-2.5)"],
	["H1(+2.25)","2(-1)","H2(-2.5)"],
	["H11(+2.25)","H2(-1.5)","2(-2)"],
	["H1(+2.25)","2(-1)","2(-2)"],
	["H1(-0.75)","H2(+1.5)","H2(+0.5)"],
	["H1(-0.75)","2(+2)","H2(+0.5)"],
	["H1(-0.75)","H2(+1.5)","2(+1)"],
	["H1(-0.75)","2(+2)","2(+1)"],
	["H1(-0.75)","2(+2)","2X"],
	["H1(-1.75)","H2(+2.5)","H2(+1.5)"],
	["H1(-1.75)","2(+3)","H2(+1.5)"],
	["H1(-1.75)","H2(+2.5)","2(+2)"],
	["H1(-1.75)","2(+3)","2(+2)"],
	["Over(1.75)","Under(2.5)","Under(1.5)"],
	["Under(2.25)","Over(1.5)","Over(2.5)"],
	["Over(2.75)","Under(3.5)","Under(2.5)"],
	["Over(3.75)","Under(4.5)","Under(3.5)"],
	["Under(3.25)","Over(2.5)","Over(3.5)"],
    ],
    [9,
	["H1(-0.25)","X","H2(0)"],
	["H1(-0.25)","X","2(Draw no bet)"],
    ],
    [10,
	["H1(-0.25)","2X","H2(0)"],
	["H1(-0.25)","H2(+0.5)","H2(0)"],
	["H1(-0.25)","2X","2(Draw no bet)"],
	["H1(-0.25)","H2(+0.5)","2(Draw no bet)"],
	["H1(+0.75)","H2(-0.5)","H2(-1)"],
	["H1(+1.75)","H2(-1.5)","H2(-2)"],
	["H1(+0.75)","2","H2(-1)"],
	["H1(-1.25)","H2(+1.5)","H2(+1)"],
	["H1(-0.25)","2(+1)","H2(0)"],
	["H1(-0.25)","2(+1)","2(Draw no bet)"],
	["H1(+1.75)","2(-1)","H2(-2)"],
	["H1(-1.25)","2(+2)","H2(+1)"],
	["Under(1.75)","Over(1.5)","Over(2)"],
	["Under(2.75)","Over(2.5)","Under(3)"]
    ],
    [11, 
	["H1(-0.25)","X","H2(-0.25)"],
	["H1(-1.25)","X1(-1)","H2(+0.75)"],
	["H1(-2.25)","X1(-2)","H2(+1.75)"]
    ],
    [12, 
	["H1(-0.25)","2X","H2(-0.25)"],
	["H1(-0.25)","H2(+0.5)","H2(-0.25)"],
	["H1(+0.75)","2","H2(-1.25)"],
	["H1(+0.75)","H2(-0.5)","H2(-1.25)"],
	["H1(+1.75)","H2(-1.5)","H2(-2.25)"],
	["H1(-1.25)","H2(+1.5)","H2(+0.75)"],
	["H1(-2.25)","H2(+2.5)","H2(+1.75)"],
	["H1(-0.25)","2(+1)","H2(-0.25)"],
	["H1(-0.25)","1(+1)","H2(-0.25)"],
	["H1(+1.75)","2(-1)","H2(-2.25)"],
	["H1(-2.25)","1(-1)","H2(+1.75)"],
	["H1(-1.25)","2(+2)","H2(+0.75)"],
	["H1(+0.75)","1(+2)","H2(-1.25)"],
	["H1(-2.25)","2(+3)","H2(+1.75)"],
	["H1(+1.75)","1(+3)","H2(-2.25)"],
	["Over(2.25)","Under(2.5)","Under(1.75)"],
	["Over(3.25)","Under(3.5)","Under(2.75)"],
    ],
    [14,
	["H1(0)","2X","H2(-0.25)"],
	["H1(0)","H2(+0.5)","H2(-0.25)"],
	["H1(+1)","2","H2(-1.25)"],
	["H1(+1)","H2(-0.5)","H2(-1.25)"],
	["H1(+2)","H2(-1.5)","H2(-2.25)"],
	["H1(-1)","H2(+1.5)","H2(+0.75)"],
	["H1(-2)","H2(+2.5)","H2(+1.75)"],
	["H1(0)","2(+1)","H2(-0.25)"],
	["1(Draw no bet)","2(+1)","H2(-0.25)"],
	["H1(+2)","2(-1)","H2(-2.25)"],
	["H1(-1)","2(+2)","H2(+0.75)"],
	["H1(-2)","2(+3)","H2(+1.75)"],
	["Under(2)","Over(1.5)","Over(2.25)"],
	["Over(2)","Under(2.5)","Under(1.75)"],
	["Under(3)","Over(2.5)","Over(3.25)"],
	["Over(3)","Under(3.5)","Under(2.75)"],
    ],
    [15,
	["H1(+0.25)","H2(0)","H2(-0.5)"],
	["H1(+1.25)","H2(-1)","H2(-1.5)"],
	["H1(+0.25)","H2(0)","2"],
	["H1(-0.75)","H2(+1)","H2(+0.5)"],
	["H1(-0.75)","H2(+1)","2X"],
	["H1(-1.75)","H2(+2)","H2(+1.5)"],
	["H1(+1.25)","H2(-1)","2(-1)"],
	["H1(-0.75)","H2(+1)","2(+1)"],
	["H1(-1.75)","H2(+2)","2(+2)"],
	["Over(1.75)","Under(2)","Under(1.5)"],
	["Over(2.75)","Under(3)","Under(2.5)"],
    ],
    [16,
	["1X","12","2X"],
    ],
    [17,
	["H1(+0.25)","12","2X"],
    ],
    [18,
	["H1(+0.25)","12","H2(+0.25)"],
    ],
    [19,
	["H1(0)","12","2X"],
    ],
    [20,
	["H1(0)","12","H2(+0.25)"],
    ],  
]

ice_hockey_combinations = [
    [1, ['1 (OverTime)(Including penalties)', '2 (OverTime)(Including penalties)'],
     	["1(Draw no bet)", "2(Draw no bet)"],
        ["GG", "NG"],
        ["Over(1.5)", "Under(1.5)"],
        ["Over(2.5)", "Under(2.5)"],
        ["Over(3.5)", "Under(3.5)"],
        ["Over(4.5)", "Under(4.5)"],
        ["Over(2)", "Under(2.5)"],
        ["Over(3)", "Under(3.5)"],
        ["Over(4)", "Under(4.5)"],
        ["Under(2)", "Over(1.5)"],
        ["Under(3)", "Over(2.5)"],
        ["Under(4)", "Over(3.5)"],
        ["NG", "Over(1.5)"],
        ["1", "2X"],
        ["1X", "2"],
        ["X", "12"],
        ["1", "2(+1)"],
        ["1(-1)", "2(+2)"],
        ["1(-2)", "2(+3)"],
        ["1(+1)", "2"],
        ["1(+2)", "2(-1)"],
        ["1(+3)", "2(-2)"],
        ["H1(-0.5)", "H2(+0.5)"],
        ["H1(+0.5)", "H2(-0.5)"],
        ["H1(-1.5)", "H2(+1.5)"],
        ["H1(+1.5)", "H2(-1.5)"],
        ["H1(-2.5)", "H2(+2.5)"],
        ["H1(+2.5)", "H2(-2.5)"],
        ["H1(-3.5)", "H2(+3.5)"],
        ["H1(+3.5)", "H2(-3.5)"],
        ["H1(-1)", "H2(+1)"],
        ["H1(-2)", "H2(+2)"],
        ["H1(-3)", "H2(+3)"],
        ["H1(+1)", "H2(-1)"],
        ["H1(+2)", "H2(-2)"],
        ["H1(+3)", "H2(-3)"],
        ["Total Booking 0-3", "Bookings Over(3.5)"],
        ["Corners Over(6.5)", 'Corners Under(6.5)'],
        ['Corners Over(7.5)', 'Corners Under(7.5)'],
        ['Corners Over(8.5)', 'Corners Under(8.5)'],
        ['Corners Over(9.5)', 'Corners Under(9.5)'],
        ['Corners Over(10.5)', 'Corners Under(10.5)'],
        ['Corners Over(11.5)', 'Corners Under(11.5)'],
        ['Corners Over(12.5)', 'Corners Under(12.5)'],
    ],
    [2, ["1", "X", "2"],
        ["H1(-0.5)", "X", "2"],
        ["1", "X", "H2(-0.5)"],	
        ["H1(-0.5)", "X", "H2(-0.5)"],
    ],
    [3, 
	["1(Draw no bet)", "X", "2"],
	["H1(0)","X","2"],
	["H1(0)","X","H2(-0.5)"],
	["1(Draw no bet)","X","H2(-0.5)"],
    ],
    [4,
	["H1(0)","2X","2"],
	["1(Draw no bet)","2X","2"],
	["H1(0)","H2(+0.5)","2"],
	["H1(0)","2X","H2(-0.5)"],
	["H1(0)","H2(+0.5)","H2(-0.5)"],
	["1(Draw no bet)","H2(+0.5)","2"],
	["1(Draw no bet)","2X","H2(-0.5)"],
	["1(Draw no bet)","H2(+0.5)","H2(-0.5)"],
	["H1(+1)","2","H2(-1.5)"],
	["H1(+1)","H2(-0.5)","H2(-1.5)"],
	["H1(-1)","H2(+1.5)","2X"],
	["H1(-1)","H2(+1.5)","H2(+0.5)"],
	["H1(+2)","H2(-1.5)","H2(-2.5)"],
	["H1(-2)","H2(+2.5)","H2(+1.5)"],
	["H1(0)","2(+1)","2"],
	["H1(0)","2(+1)","H2(-0.5)"],
	["1(Draw no bet)","2(+1)","2"],
	["1(Draw no bet)","2(+1)","H2(-0.5)"],
	["1","1(+1)","H2(0)"],
	["H1(-0.5)","1(+1)","H2(0)"],
	["1","1(+1)","2(Draw no bet)"],
	["H1(-0.5)","1(+1)","2(Draw no bet)"],
	["H1(+1)","2","2(-1)"],
	["H1(+1)","H2(-0.5)","2(-1)"],
	["1(-1)","1","H2(+1)"],
	["1(-1)","H1(-0.5)","H2(+1)"],
	["H1(-1)","2(+2)","2X"],
	["H1(-1)","2(+1)","H2(+0.5)"],
	["H1(-1)","H2(+1.5)","2(+1)"],
	["H1(-1)","2(+2)","2(+1)"],
	["1X","1(+2)","H2(-1)"],
	["1(+1)","H1(+1.5)","H2(-1)"],
	["H1(+0.5)","1(+2)","H2(-1)"],
	["1(+1)","1(+2)","H2(-1)"],
	["H1(+2)","2(-1)","H2(-2.5)"],
	["H1(+2)","H2(-1.5)","2(-2)"],
	["H1(+2)","2(-1)","2(-2)"],
	["1(-2)","H1(-1.5)","H2(+2)"],
	["H1(-2.5)","1(-1)","H2(+2)"],
	["1(-2)","1(-1)","H2(+2)"],
	["H1(-2)","2(+3)","H2(+1.5)"],
	["H1(-2)","H2(+2.5)","2(+2)"],
	["H1(-2)","2(+3)","2(+2)"],
	["1(+2)","H1(+2.5)","H2(-2)"],
	["H1(+1.5)","1(+3)","H2(-2)"],
	["1(+2)","1(+3)","H2(-2)"],
	["Over(2)","Under(2.5)","Under(1.5)"],
	["Under(2)","Over(1.5)","Over(2.5)"],
	["Over(3)","Under(3.5)","Under(2.5)"],
	["Under(3)","Over(2.5)","Over(3.5)"],
	["Over(4)","Under(4.5)","Under(3.5)"],
	["Under(4)","Over(3.5)","Over(4.5)"],
    ],
    [5,
	["H1(-0.25)","X","2"],
	["H1(-0.25)","X","H2(-0.5)"],
	],
    [6,
	["H1(-0.25)","2X","2"],
	["H1(-0.25)","2X","H2(-0.5)"],
	["H1(-0.25)","H2(+0.5)","H2(-0.5)"],
	["H1(-0.25)","H2(+0.5)","2"],
	["H1(+0.75)","2","H2(-1.5)"],
	["H1(+0.75)","H2(-0.5)","H2(-1.5)"],
	["H1(+1.75)","H2(-1.5)","H2(-2.5)"],
	["H1(-1.25)","H2(+1.5)","2X"],
	["H1(-1.25)","H2(+1.5)","H2(+0.5)"],
	["H1(-2.25)","H2(+2.5)","H2(+1.5)"],
	["H1(-0.25)","2(+1)","H2(-0.5)"],
	["H1(-0.25)","2(+1)","2"],
	["H1(+0.75)","2","2(-1)"],
	["H1(+0.75)","H2(-0.5)","2(-1)"],
	["H1(+1.75)","2(-1)","H2(-2.5)"],
	["H1(+1.75)","H2(-1.5)","2(-2)"],
	["H1(+1.75)","2(-1)","2(-2)"],
	["H1(-1.25)","2(+2)","2X"],
	["H1(-1.25)","H2(+1.5)","H2(+0.5)"],
	["H1(-1.25)","2(+2)","H2(+0.5)"],
	["H1(-1.25)","H2(+1.5)","2(+1)"],
	["H1(-1.25)","2(+2)","2(+1)"],
	["H1(-2.25)","H2(+2.5)","H2(+1.5)"],
	["H1(-2.25)","2(+3)","H2(+1.5)"],
	["H1(-2.25)","H2(+2.5)","2(+2)"],
	["H1(-2.25)","2(+3)","2(+2)"],
	["Under(1.75)","Over(1.5)","Over(2.5)"],
	["Over(2.25)","Under(2.5)","Under(1.5)"],
	["Under(2.75)","Over(2.5)","Over(3.5)"],
	["Under(3.75)","Over(3.5)","Over(4.5)"],
	["Over(3.25)","Under(3.5)","Under(2.5)"],
	],
    [7, 
	["H1(+0.25)","X","2"],
	["H1(+0.25)","X","H2(-0.5)"],
    ],
    [8,
	["H1(+0.25)","2X","2"],
	["H1(+0.25)","2X","H2(-0.5)"],
	["H1(+0.25)","H2(+0.5)","H2(-0.5)"],
	["H1(+0.25)","H2(+0.5)","2"],
	["H1(+1.25)","H2(-0.5)","H2(-1.5)"],
	["H1(+1.25)","2","H2(-1.5)"],
	["H1(+2.25)","H2(-1.5)","H2(-2.5)"],
	["H1(-0.75)","H2(+1.5)","H2(+0.5)"],
	["H1(-0.75)","H2(+1.5)","2X"],
	["H1(-1.75)","H2(+2.5)","H2(+1.5)"],
	["H1(+0.25)","2(+1)","H2(-0.5)"],
	["H1(+0.25)","2(+1)","2"],
	["H1(+1.25)","H2(-0.5)","2(-1)"],
	["H1(+1.25)","2","2(-1)"],
	["H1(+2.25)","H2(-1.5)","H2(-2.5)"],
	["H1(+2.25)","2(-1)","H2(-2.5)"],
	["H11(+2.25)","H2(-1.5)","2(-2)"],
	["H1(+2.25)","2(-1)","2(-2)"],
	["H1(-0.75)","H2(+1.5)","H2(+0.5)"],
	["H1(-0.75)","2(+2)","H2(+0.5)"],
	["H1(-0.75)","H2(+1.5)","2(+1)"],
	["H1(-0.75)","2(+2)","2(+1)"],
	["H1(-0.75)","2(+2)","2X"],
	["H1(-1.75)","H2(+2.5)","H2(+1.5)"],
	["H1(-1.75)","2(+3)","H2(+1.5)"],
	["H1(-1.75)","H2(+2.5)","2(+2)"],
	["H1(-1.75)","2(+3)","2(+2)"],
	["Over(1.75)","Under(2.5)","Under(1.5)"],
	["Under(2.25)","Over(1.5)","Over(2.5)"],
	["Over(2.75)","Under(3.5)","Under(2.5)"],
	["Over(3.75)","Under(4.5)","Under(3.5)"],
	["Under(3.25)","Over(2.5)","Over(3.5)"],
    ],
    [9,
	["H1(-0.25)","X","H2(0)"],
	["H1(-0.25)","X","2(Draw no bet)"],
    ],
    [10,
	["H1(-0.25)","2X","H2(0)"],
	["H1(-0.25)","H2(+0.5)","H2(0)"],
	["H1(-0.25)","2X","2(Draw no bet)"],
	["H1(-0.25)","H2(+0.5)","2(Draw no bet)"],
	["H1(+0.75)","H2(-0.5)","H2(-1)"],
	["H1(+1.75)","H2(-1.5)","H2(-2)"],
	["H1(+0.75)","2","H2(-1)"],
	["H1(-1.25)","H2(+1.5)","H2(+1)"],
	["H1(-0.25)","2(+1)","H2(0)"],
	["H1(-0.25)","2(+1)","2(Draw no bet)"],
	["H1(+1.75)","2(-1)","H2(-2)"],
	["H1(-1.25)","2(+2)","H2(+1)"],
	["Under(1.75)","Over(1.5)","Over(2)"],
	["Under(2.75)","Over(2.5)","Under(3)"]
    ],
    [11, 
	["H1(-0.25)","X","H2(-0.25)"],
	["H1(-1.25)","X1(-1)","H2(+0.75)"],
	["H1(-2.25)","X1(-2)","H2(+1.75)"]
    ],
    [12, 
	["H1(-0.25)","2X","H2(-0.25)"],
	["H1(-0.25)","H2(+0.5)","H2(-0.25)"],
	["H1(+0.75)","2","H2(-1.25)"],
	["H1(+0.75)","H2(-0.5)","H2(-1.25)"],
	["H1(+1.75)","H2(-1.5)","H2(-2.25)"],
	["H1(-1.25)","H2(+1.5)","H2(+0.75)"],
	["H1(-2.25)","H2(+2.5)","H2(+1.75)"],
	["H1(-0.25)","2(+1)","H2(-0.25)"],
	["H1(-0.25)","1(+1)","H2(-0.25)"],
	["H1(+1.75)","2(-1)","H2(-2.25)"],
	["H1(-2.25)","1(-1)","H2(+1.75)"],
	["H1(-1.25)","2(+2)","H2(+0.75)"],
	["H1(+0.75)","1(+2)","H2(-1.25)"],
	["H1(-2.25)","2(+3)","H2(+1.75)"],
	["H1(+1.75)","1(+3)","H2(-2.25)"],
	["Over(2.25)","Under(2.5)","Under(1.75)"],
	["Over(3.25)","Under(3.5)","Under(2.75)"],
    ],
    [14,
	["H1(0)","2X","H2(-0.25)"],
	["H1(0)","H2(+0.5)","H2(-0.25)"],
	["H1(+1)","2","H2(-1.25)"],
	["H1(+1)","H2(-0.5)","H2(-1.25)"],
	["H1(+2)","H2(-1.5)","H2(-2.25)"],
	["H1(-1)","H2(+1.5)","H2(+0.75)"],
	["H1(-2)","H2(+2.5)","H2(+1.75)"],
	["H1(0)","2(+1)","H2(-0.25)"],
	["1(Draw no bet)","2(+1)","H2(-0.25)"],
	["H1(+2)","2(-1)","H2(-2.25)"],
	["H1(-1)","2(+2)","H2(+0.75)"],
	["H1(-2)","2(+3)","H2(+1.75)"],
	["Under(2)","Over(1.5)","Over(2.25)"],
	["Over(2)","Under(2.5)","Under(1.75)"],
	["Under(3)","Over(2.5)","Over(3.25)"],
	["Over(3)","Under(3.5)","Under(2.75)"],
    ],
    [15,
	["H1(+0.25)","H2(0)","H2(-0.5)"],
	["H1(+1.25)","H2(-1)","H2(-1.5)"],
	["H1(+0.25)","H2(0)","2"],
	["H1(-0.75)","H2(+1)","H2(+0.5)"],
	["H1(-0.75)","H2(+1)","2X"],
	["H1(-1.75)","H2(+2)","H2(+1.5)"],
	["H1(+1.25)","H2(-1)","2(-1)"],
	["H1(-0.75)","H2(+1)","2(+1)"],
	["H1(-1.75)","H2(+2)","2(+2)"],
	["Over(1.75)","Under(2)","Under(1.5)"],
	["Over(2.75)","Under(3)","Under(2.5)"],
    ],
    [16,
	["1X","12","2X"],
    ],
    [17,
	["H1(+0.25)","12","2X"],
    ],
    [18,
	["H1(+0.25)","12","H2(+0.25)"],
    ],
    [19,
	["H1(0)","12","2X"],
    ],
    [20,
	["H1(0)","12","H2(+0.25)"],
    ],
]

darts_combination = [
	[1, 
  		["1", "2"],
    ],
]

basketball_combinations = [
	[1, ["1 (Over Time)", "2 (Over Time)"],
    	["H1(-13.5)", "H2(+13.5)"],
		["H1(-14.5)", "H2(+14.5)"],
		["H1(-15.5)", "H2(+15.5)"],
		["H1(-16.5)", "H2(+16.5)"],
		["H1(-17.5)", "H2(+17.5)"],
		["H1(-18.5)", "H2(+18.5)"],
		["H1(-19.5)", "H2(+19.5)"],
		["H1(-20.5)", "H2(+20.5)"],
  		["H1(-21.5)", "H2(+21.5)"],
		["H1(-22.5)", "H2(+22.5)"],
		["H1(+13.5)", "H2(-13.5)"],
		["H1(+14.5)", "H2(-14.5)"],
		["H1(+15.5)", "H2(-15.5)"],
		["H1(+16.5)", "H2(-16.5)"],
		["H1(+17.5)", "H2(-17.5)"],
		["H1(+18.5)", "H2(-18.5)"],
		["H1(+19.5)", "H2(-19.5)"],
		["H1(+20.5)", "H2(-20.5)"],
  		["H1(+21.5)", "H2(-21.5)"],
		["H1(+22.5)", "H2(-22.5)"],
		["1 (First Half) Over 107.5", "1 (First Half) Under 107.5"],
		["1 (First Half) Over 108.5", "1 (First Half) Under 108.5"],
		["1 (First Half) Over 109.5", "1 (First Half) Under 109.5"],
		["1 (First Half) Over 110.5", "1 (First Half) Under 110.5"],
		["1 (First Half) Over 111.5", "1 (First Half) Under 111.5"],
		["1 (First Half) Over 112.5", "1 (First Half) Under 112.5"],
		["1 (First Half) Over 113.5", "1 (First Half) Under 113.5"],
		["1 (First Half) Over 114.5", "1 (First Half) Under 114.5"],
		["1 (First Half) Over 115.5", "1 (First Half) Under 115.5"],
		["1 (First Half) Over 116.5", "1 (First Half) Under 116.5"],
		["1 (First Half) Over 117.5", "1 (First Half) Under 117.5"],
		["1 (First Half) Over 118.5", "1 (First Half) Under 118.5"],
		["1 (First Half) Over 119.5", "1 (First Half) Under 119.5"],
		["1 (First Half) Over 120.5", "1 (First Half) Under 120.5"],
		["1 (First Half) Over 121.5", "1 (First Half) Under 121.5"],
		["Over 207.5", "Under 207.5"],
		["Over 208.5", "Under 208.5"],
		["Over 209.5", "Under 209.5"],
		["Over 210.5", "Under 210.5"],
		["Over 211.5", "Under 211.5"],
		["Over 212.5", "Under 212.5"],
		["Over 213.5", "Under 213.5"],
		["Over 214.5", "Under 214.5"],
		["Over 215.5", "Under 215.5"],
		["Over 216.5", "Under 216.5"],
		["Over 217.5", "Under 217.5"],
		["Over 218.5", "Under 218.5"],
		["Over 219.5", "Under 219.5"],
		["Over 220.5", "Under 220.5"],
		["Over 221.5", "Under 221.5"],
		["Over 222.5", "Under 222.5"],
		["Over 223.5", "Under 223.5"],
		["Over 224.5", "Under 224.5"],
		["Over 225.5", "Under 225.5"],
		["Over 226.5", "Under 226.5"],
		["Over 227.5", "Under 227.5"],
		["Over 228.5", "Under 228.5"],
		["Over 229.5", "Under 229.5"],
		["Over 230.5", "Under 230.5"],
    ],
	[2, ["1 (Regular Time)", "X (Regular Time)", "2 (Regular Time)"],
		["1 (First Half)", "X (First Half)", "2 (First Half)"],
	],
]


def extract_odds(market_list, game_data):
    odds_dict = OrderedDict()
    for bookie_name, bookie_data in game_data.items():
        for market in market_list:
            if market in bookie_data:
                odds = bookie_data[market]
                if odds is not None and odds != "None":  # Check for valid odds
                    try:
                        odds = float(odds)
                    except ValueError:
                        odds = 0  # Handle non-numeric odds

                    # Update highest odds for the market, ensuring bookmaker uniqueness
                    if market not in odds_dict or odds > odds_dict[market]["odds"]:
                        odds_dict[market] = {"bookie": bookie_name, "odds": odds}

    output = []
    for market in market_list:
        if market in odds_dict:
            bookie_data = odds_dict[market]
            output.append({bookie_data["bookie"]: {market: bookie_data["odds"]}})
    return output





def extract_game_markets(game_data, market_combinations):
    markets_for_formula = {}
    for combination in market_combinations:
        formula_type = combination[0]
        market_lists = combination[1:]
            
        odds_for_combination = []
        for market_list in market_lists:
            odds = extract_odds(market_list, game_data)
            odds_for_combination.append(odds)
        markets_for_formula[formula_type] = odds_for_combination
    return markets_for_formula

footballfolder = "engine/storage_engine/processed_data/"

combinations_mapper = {
        #"volleyball": volleyball_,
        "basketball": basketball_combinations,
        "football": football_combinations,
        "icehockey": ice_hockey_combinations,
        "darts": darts_combination,
    }

for sport_file in os.listdir(footballfolder):
    try:
        sport_folder_path = os.path.join(footballfolder, sport_file)
        if os.path.isfile(sport_folder_path):
            filename = f"{sport_file}"
            sport_name, t = sport_file.split(".")
            filepath = f"engine/storage_engine/combined_data/"
            try:
                original_umask = os.umask(0)
                os.makedirs(filepath, exist_ok=True, mode=0o770)
            except Exception as e:
                message = "Problem With Creating File Path For Processing Data"
                log_error(message)
            finally:
                os.umask(original_umask)
                if sport_name in combinations_mapper:
                    games_data = load_json(sport_folder_path)
                    extracted_markets = {}
                    for game_name, game_data in games_data.items():
                        combinations = combinations_mapper[sport_name]
                        extracted_markets[game_name] = extract_game_markets(game_data, combinations)
                    file = f"{filepath}/{filename}"
                    save_json(sport_folder_path, file, extracted_markets)
                else:
                    log_error(f"Sport File {sport_name} is not in special function")
    except Exception as e:
        message = f"Error with processing {sport_folder_path}, filename: {filename}"
        log_exception(message)


"""
def check_arbitrage_opportunity(arbitrage_list):
    for arb_data in arbitrage_list:
        for arb in arb_data:
            L = find_arbitrage(**arb)
            if L < 1:
                # Arbitrage opportunity found
                # Implement logic to calculate optimal split
                print(f"Arbitrage Opportunity: {L}")




footballfile = "engine/storage_engine/processed_data/football.json"
games_data = json.load(footballfile)

arbitrage_list = []

for game_name, game_data in games_data.items():
    extracted_markets = extract_game_markets(game_data, market_combinations)
    
    for markets_for_formula in extracted_markets:
        for arb_data in markets_for_formula:
            L = find_arbitrage(**arb_data[0])  # Assuming there's only one market combination per formula
            if L < 1:
                arbitrage_list.append(arb_data)

check_arbitrage_opportunity(arbitrage_list)

#footballfile = "engine/storage_engine/processed_data/football.json"
#data = json.load(footballfile)
"""

